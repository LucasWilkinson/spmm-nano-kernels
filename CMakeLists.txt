

FILE(GLOB SOP_GENERATED_SRCS ${CMAKE_CURRENT_LIST_DIR}/generated/*.cpp)
set(SOP_GENERATED_INCLUDES ${CMAKE_CURRENT_LIST_DIR}/generated)

if(${ENABLE_AVX512})
    message(STATUS "NANO: AVX512 enabled")
    set(SOP_CXX_FLAGS "${SOP_CXX_FLAGS} -DENABLE_AVX512 -DRTE_MEMCPY_AVX512")
    FILE(GLOB_RECURSE SOP_GENERATED_SRCS_NESTED ${CMAKE_CURRENT_LIST_DIR}/generated/AVX512/factories/*/*.cpp)
    SET(SOP_GENERATED_SRCS ${SOP_GENERATED_SRCS} ${SOP_GENERATED_SRCS_NESTED})
    set(SOP_GENERATED_INCLUDES ${SOP_GENERATED_INCLUDES} ${CMAKE_CURRENT_LIST_DIR}/generated/AVX512/include)
endif()

if(${ENABLE_AVX2})
    message(STATUS "NANO: AVX2 enabled")
    set(SOP_CXX_FLAGS "${SOP_CXX_FLAGS} -DENABLE_AVX2")
    FILE(GLOB_RECURSE SOP_GENERATED_SRCS_NESTED ${CMAKE_CURRENT_LIST_DIR}/generated/AVX2/factories/*/*.cpp)
    SET(SOP_GENERATED_SRCS ${SOP_GENERATED_SRCS} ${SOP_GENERATED_SRCS_NESTED})
    set(SOP_GENERATED_INCLUDES ${SOP_GENERATED_INCLUDES} ${CMAKE_CURRENT_LIST_DIR}/generated/AVX2/include)
endif()

if(${ENABLE_NEON})
    message(STATUS "NANO: NEON enabled")
    set(SOP_CXX_FLAGS "${SOP_CXX_FLAGS} -DENABLE_NEON")
    FILE(GLOB_RECURSE SOP_GENERATED_SRCS_NESTED ${CMAKE_CURRENT_LIST_DIR}/generated/NEON/factories/*/*.cpp)
    SET(SOP_GENERATED_SRCS ${SOP_GENERATED_SRCS} ${SOP_GENERATED_SRCS_NESTED})
    set(SOP_GENERATED_INCLUDES ${SOP_GENERATED_INCLUDES} ${CMAKE_CURRENT_LIST_DIR}/generated/NEON/include)
endif()

FILE(GLOB SOP_SOURCES ${CMAKE_CURRENT_LIST_DIR}/src/*.cpp)
FILE(GLOB_RECURSE SOP_SOURCES_NESTED ${CMAKE_CURRENT_LIST_DIR}/src/*/*.cpp)
SET(SOP_SOURCES ${SOP_SOURCES} ${SOP_SOURCES_NESTED})

set(SOP_INCLUDES "${CMAKE_CURRENT_LIST_DIR}/include")

if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
    set(SOP_THIRD_PARTY_INCLUDES "${CMAKE_CURRENT_LIST_DIR}/third_party/version2/vectorclass")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    set(SOP_THIRD_PARTY_INCLUDES "${CMAKE_CURRENT_LIST_DIR}/third_party/version2/vectorclass")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
    set(SOP_THIRD_PARTY_INCLUDES "${CMAKE_CURRENT_LIST_DIR}/third_party/version1/vectorclass")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "IntelLLVM")
    set(SOP_THIRD_PARTY_INCLUDES "${CMAKE_CURRENT_LIST_DIR}/third_party/version2/vectorclass")
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    set(SOP_THIRD_PARTY_INCLUDES "${CMAKE_CURRENT_LIST_DIR}/third_party/version2/vectorclass")
endif()

set(SOP_THIRD_PARTY_INCLUDES ${SOP_THIRD_PARTY_INCLUDES} ${CMAKE_CURRENT_LIST_DIR}/third_party/rte)
set(SOP_ALL_INCLUDES ${SOP_INCLUDES} ${SOP_THIRD_PARTY_INCLUDES} ${SOP_GENERATED_INCLUDES})

# TODO: Check if this is correct on all systems tested
set(SOP_CXX_FLAGS "${SOP_CXX_FLAGS} -DRTE_CACHE_LINE_SIZE=64")

set(SOP_SOURCES  ${SOP_SOURCES}  PARENT_SCOPE)
set(SOP_INCLUDES ${SOP_INCLUDES} PARENT_SCOPE)
set(SOP_THIRD_PARTY_INCLUDES ${SOP_THIRD_PARTY_INCLUDES} PARENT_SCOPE)
set(SOP_GENERATED_INCLUDES ${SOP_GENERATED_INCLUDES} PARENT_SCOPE)
set(SOP_GENERATED_SRCS ${SOP_GENERATED_SRCS} PARENT_SCOPE)
set(SOP_ALL_INCLUDES ${SOP_ALL_INCLUDES} PARENT_SCOPE)
set(SOP_CXX_FLAGS ${SOP_CXX_FLAGS} PARENT_SCOPE)